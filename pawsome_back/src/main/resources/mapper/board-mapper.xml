<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.co.iei.board.model.dao.BoardDao">
	<select id="selectBoardList" resultType="board">
		select * from 
			(select rownum as rnum, b.* from 
    			(select board_no,
    				    board_tag,
    				    board_title,
    				    board_content,
    				    board_thumb,
    				    read_count,
    				    (case  
							when(trunc((sysdate - reg_date)*24*60)) <![CDATA[ < ]]> 60 
							then(trunc((sysdate - reg_date)*24*60))||'분 전' 
							when(trunc((sysdate - reg_date)*24)) <![CDATA[ < ]]> 24 
							then(trunc((sysdate - reg_date)*24))||'시간 전' 
							when trunc((sysdate - reg_date)) <![CDATA[ < ]]> 30 
							then trunc((sysdate - reg_date)) || '일 전' 
    						when trunc((sysdate - reg_date) / 30) <![CDATA[ < ]]> 12 
    						then trunc((sysdate - reg_date) / 30) || '개월 전' 
    						else trunc((sysdate - reg_date) / 365) || '년 전'
						end)as reg_date,
    				    member_nickname,
    				    (select count(*) from board_like where board_like.board_no = board.board_no) board_like,
    				    (select count(*) from reply where reply.board_no = board.board_no) reply_count
        		from board
        		<if test="tag != 0">
        			where board_tag = #{tag}
        		</if>
        		<choose>
	        		<when test="type== 1">
	        		order by board_no desc)
	        		</when>
	        		<when test="type == 2">
	        		order by (read_count + board_like) desc)
	        		</when>        		
        		</choose>
        		 b )
		where rnum between #{start} and #{end}
	</select>
	<select id="totalCount" resultType="int">
		select count(*) from board <if test="tag!=0">where board_tag=#{tag}</if>
	</select>
	<select id="selectBoardNo">
	select max(board_no) from board
	</select>
	<insert id="insertBoard">
		insert into board values(board_seq.nextval,#{boardTag},#{boardTitle},#{boardContent},#{boardThumb},0,sysdate,#{memberNickname})
	</insert>
	<insert id="insertBoardFile">
		insert into board_file values(board_file_seq.nextval,#{boardNo},#{filename},#{filepath})
	</insert>
	<select id="selectOneBoard" resultType="board">
		select 
			board_no,
			board_tag,
			board_title,
			board_content,
			read_count,
			board_thumb,
			(case  
				when(trunc((sysdate - reg_date)*24*60)) <![CDATA[ < ]]> 60 
				then(trunc((sysdate - reg_date)*24*60))||'분 전' 
				when(trunc((sysdate - reg_date)*24)) <![CDATA[ < ]]> 24 
				then(trunc((sysdate - reg_date)*24))||'시간 전' 
				when trunc((sysdate - reg_date)) <![CDATA[ < ]]> 30 
				then trunc((sysdate - reg_date)) || '일 전' 
    			when trunc((sysdate - reg_date) / 30) <![CDATA[ < ]]> 12 
    			then trunc((sysdate - reg_date) / 30) || '개월 전' 
    			else trunc((sysdate - reg_date) / 365) || '년 전'
			end)as reg_date,
			(select count(*) from board_like where board_no=#{boardNo}) as board_like,
			(select count(*) from board_like where board_no=#{boardNo} and member_nickname=#{memberNickname}) as is_like,
			member_nickname,
			member_profile
		from board
		join member using(member_nickname)
		where board_no=#{boardNo}
	</select>
	<select id="selectFileImage" resultType="boardFile">
		select * from board_file where board_no =#{boardNo}
	</select>
	<update id="updateBoardCount">
		update board set read_count = read_count+1 where board_no = #{boardNo}
	</update>
	<select id="selectOneBoardFileList" resultType="boardFile">
		select * from board_file where board_no=#{boardNo}
	</select>
	<delete id="deleteBoard">
		delete from board where board_no=#{boardNo}
	</delete>
	<update id="updateBoard">
		update board set
			board_tag = #{boardTag},
			board_title = #{boardTitle},
			board_content = #{boardContent},
			board_thumb = #{boardThumb}
		where board_no = #{boardNo}
	</update>
	<select id="selectBoardFile" resultType="boardFile">
  		select * from board_file
  		where board_file_no in
  		<foreach collection="array" item="boardFileNo" open="(" close=")" separator=",">
  			#{boardFileNo}
  		</foreach>
  	</select>
  	<delete id="deleteBoardFile">
  		delete from board_file
  		where board_file_no in
  		<foreach collection="array" item="boardFileNo" open="(" close=")" separator=",">
  			#{boardFileNo}
  		</foreach>
  	</delete>
  	<select id="isLike" resultType="int">
  		select count(*) from board_like where board_no =#{boardNo} and member_nickname = #{memberNickname}
  	</select>
  	<insert id="insertBoardLike">
  		insert into board_like values(#{boardNo},#{memberNickname})
  	</insert>
  	<delete id="deleteBoardLike">
  		delete from board_like where board_no=#{boardNo} and member_nickname=#{memberNickname}
  	</delete>
  	<select id="totalReplyCount" resultType="int">
  		select count(*) from reply where board_no=#{boardNo}
  	</select>
  	<select id="selectReplyList" resultType="reply">
  		select * from
  			(select rownum as rnum, r. * from
				(select reply_no,
						reply_content,
        				board_no,
        				(case  
		       			when trunc((sysdate - reply_reg_date)*24*60) <![CDATA[ < ]]> 60 
		        		then trunc((sysdate - reply_reg_date)*24*60)||'분전' 
    	        		when trunc((sysdate - reply_reg_date)*24) <![CDATA[ < ]]> 24 
		        		then trunc((sysdate - reply_reg_date)*24)||'시간전' 
                		when trunc((sysdate - reply_reg_date)) <![CDATA[ < ]]> 30 
						then trunc((sysdate - reply_reg_date)) || '일 전' 
    					when trunc((sysdate - reply_reg_date) / 30) <![CDATA[ < ]]> 12 
    					then trunc((sysdate - reply_reg_date) / 30) || '개월 전' 
    					else trunc((sysdate - reply_reg_date) / 365) || '년 전'  
                		end)as reply_reg_date,
                     	member_nickname,
                     	member_profile,
                     	(select count(*) from reply_like where reply_like.reply_no = reply.reply_no) reply_like,
                     	(select count(*) from reply_like where reply_no=reply.reply_no and member_nickname=#{memberNickname}) as is_like
		from reply 
		join member using(member_nickname) where board_no=#{boardNo} and reply_no_ref is null
		<choose>
			<when test="type == 1">
				order by reply_no desc)
			</when>
			<when test="type==2">
				order by reply_like desc)
			</when>
		</choose>
		 r)
		where rnum between #{start} and #{end}
  	</select>
  	<insert id="insertReply">
  		insert into reply values(reply_seq.nextval,#{boardNo},null,#{replyContent},sysdate,#{memberNickname})
  	</insert>
  	<select id="selectOneReply" resultType="reply">
  		select r.*,
  			  (select count(reply_no_ref) from reply where reply_no_ref = r.reply_no) as reply_count,
  			  (select count(*) from reply_like where reply_no=r.reply_no and member_nickname=#{memberNickname}) as is_like
    	from reply r
    	where board_no = #{boardNo} and reply_no_ref is null order by 1 desc
  	</select>
  	<delete id="deleteReply">
  		delete from reply
  		where reply_no = #{replyNo}
  	</delete>
  	<insert id="insertReplyLike">
  		insert into reply_like values(#{replyNo},#{memberNickname})
  	</insert>
  	<delete id="deleteReplyLike">
  		delete from reply_like where reply_no=#{replyNo} and member_nickname =#{memberNickname}
  	</delete>
  	<select id="selectReplyLikeCount" resultType="int">
  		select count(*) from reply_like where reply_no = #{replyNo}
  	</select>
  	<update id="updateReply">
  		update reply set 
  			reply_content= #{replyContent}
  		where reply_no = #{replyNo}
  	</update>
  	<insert id="insertReReply">
  		insert into reply values(reply_seq.nextval,#{boardNo},#{replyNo},#{replyContent},sysdate, #{memberNickname})
  	</insert>
  	<select id="selectReReplyList" resultType="reply">
  		select * from
  			(select rownum as rnum, r. * from
				(select reply_no,
						reply_content,
        				board_no,
        				(case  
		       			when trunc((sysdate - reply_reg_date)*24*60) <![CDATA[ < ]]> 60 
		        		then trunc((sysdate - reply_reg_date)*24*60)||'분전' 
    	        		when trunc((sysdate - reply_reg_date)*24) <![CDATA[ < ]]> 24 
		        		then trunc((sysdate - reply_reg_date)*24)||'시간전' 
                		when trunc((sysdate - reply_reg_date)) <![CDATA[ < ]]> 30 
						then trunc((sysdate - reply_reg_date)) || '일 전' 
    					when trunc((sysdate - reply_reg_date) / 30) <![CDATA[ < ]]> 12 
    					then trunc((sysdate - reply_reg_date) / 30) || '개월 전' 
    					else trunc((sysdate - reply_reg_date) / 365) || '년 전'  
                		end)as reply_reg_date,
                     	member_nickname,
                     	member_profile,
                     	(select count(*) from reply_like where reply_like.reply_no = reply.reply_no) reply_like,
                     	(select count(*) from reply_like where reply_no=reply.reply_no and member_nickname=#{memberNickname}) as is_like
		from reply 
		join member using(member_nickname) where reply_no_ref = #{reply.replyNo}
		order by reply_no desc)
		 r)
  	</select>
</mapper>
